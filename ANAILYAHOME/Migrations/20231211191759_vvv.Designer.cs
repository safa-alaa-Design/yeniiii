// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ANAILYAHOME.Migrations
{
    [DbContext(typeof(AplicetionDbContext))]
    [Migration("20231211191759_vvv")]
    partial class vvv
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ANAILYAHOME.Models.AdmenbanalEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kimlik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("katagore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saticiadres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sirketTanim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("ŞirketAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ŞirketAdres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Admenbanal");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.AliciEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Pasword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ulkeler")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Alici");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.AplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ulkeler")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ANAILYAHOME.Models.BayiKategori", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Bayiid")
                        .HasColumnType("int");

                    b.Property<int>("katagore")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Bayiid");

                    b.ToTable("BayiKategoriler");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.TeslimSuresi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("teslimsuresi")
                        .HasColumnType("int");

                    b.Property<int>("ulkeler")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("TeslimSure");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.alışverişEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("AliciId")
                        .HasColumnType("int");

                    b.Property<int>("ToplamFiyat")
                        .HasColumnType("int");

                    b.Property<int>("satsTarih")
                        .HasColumnType("int");

                    b.Property<int>("urunId")
                        .HasColumnType("int");

                    b.Property<int>("urunSaysi")
                        .HasColumnType("int");

                    b.Property<int>("urunTipi")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AliciId");

                    b.HasIndex("urunId");

                    b.ToTable("alışveriş");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.ayagitipi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ayagiTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ayak");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.emailgonderEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("emailgonder");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.kumastipi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("kumasTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("kumas");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.renkler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("renk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("renk");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.urunEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("AdmenbanalId")
                        .HasColumnType("int");

                    b.Property<string>("ahsapTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("katagore")
                        .HasColumnType("int");

                    b.Property<string>("sungurTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tanım")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urunAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("urunKod")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AdmenbanalId");

                    b.ToTable("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.Buyutlar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Derinlik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genişlik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<string>("Yükseklik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("UrunId");

                    b.ToTable("buyut");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.CocukOdasi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<string>("dulapKapiTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yatakTacRengi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("çekmeceliSayi")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UrunId")
                        .IsUnique();

                    b.ToTable("cocuk");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.Degerler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<int>("prodouctId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UrunId")
                        .IsUnique();

                    b.HasIndex("prodouctId");

                    b.ToTable("deger");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.FiyatEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("Anafiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<int>("ulkeler")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UrunId");

                    b.ToTable("fiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.FotoEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoredFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UrunId");

                    b.ToTable("foto");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.OturmaOdasi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<bool?>("YatakOlmak")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("UrunId")
                        .IsUnique();

                    b.ToTable("oturma");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.ProductDeger", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("katagore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("prodouct");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.YatmaOdasi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<string>("dulapKapiTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yatakTacRengi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("çekmeceliSayi")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UrunId")
                        .IsUnique();

                    b.ToTable("yatma");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.YemekOdasi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("MasaTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SandaliyeSayisi")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UrunId")
                        .IsUnique();

                    b.ToTable("yemek");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.cocukfiyatler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal?>("calismamasasi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("fiyatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("kutuphane")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("raflar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sandaliye")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("yataş")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("fiyatId")
                        .IsUnique();

                    b.ToTable("cocukfiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.oturmafiyatler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("fiyatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ikilikultuk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ortaSehba")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("pejeri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ucluSehba")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("uclukultuk")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("fiyatId")
                        .IsUnique();

                    b.ToTable("oturmafiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.yatmafiyatler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal?>("Aynafiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("anbarli")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("boffiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("fiyatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("konsol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sandaliye")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sanduk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("yatakçekmeceli")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("yataş")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("yidilik")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("fiyatId")
                        .IsUnique();

                    b.ToTable("yatmafiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.yemekfiyatler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("fiyatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("sandaliye")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("fiyatId")
                        .IsUnique();

                    b.ToTable("yemekfiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.models.oturmaEkleModels", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Derinlik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genişlik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("YatakOlmak")
                        .HasColumnType("bit");

                    b.Property<string>("Yükseklik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ahsapTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sungurTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tanım")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urunAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("urunKod")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("oturmaEkleModels");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "a8b782c3-4e4f-4613-9119-dbe07198f3a1",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "8b959533-7acf-4119-be36-710694e9f574",
                            Name = "USER",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "b5ee6ddf-4f27-4814-be8c-37b6507f4f92",
                            Name = "SATICI",
                            NormalizedName = "SATICI"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ANAILYAHOME.Models.AdmenbanalEntity", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AplicationUser", "AspNetUsers")
                        .WithOne("Admenbanal")
                        .HasForeignKey("ANAILYAHOME.Models.AdmenbanalEntity", "userId")
                        .IsRequired();

                    b.Navigation("AspNetUsers");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.AliciEntity", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AplicationUser", "AspNetUsers")
                        .WithOne("Alici")
                        .HasForeignKey("ANAILYAHOME.Models.AliciEntity", "userId")
                        .IsRequired();

                    b.Navigation("AspNetUsers");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.BayiKategori", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AdmenbanalEntity", "Admenbanal")
                        .WithMany("BayiKategorilist")
                        .HasForeignKey("Bayiid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admenbanal");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.alışverişEntity", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AliciEntity", "Alici")
                        .WithMany("Listofalışveriş")
                        .HasForeignKey("AliciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithMany("Listofalışveriş")
                        .HasForeignKey("urunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alici");

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.urunEntity", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AdmenbanalEntity", "Admenbanal")
                        .WithMany("Listofurun")
                        .HasForeignKey("AdmenbanalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admenbanal");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.Buyutlar", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithMany("ListofBuyut")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.CocukOdasi", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithOne("cocuk")
                        .HasForeignKey("ANAILYAHOME.entityes.CocukOdasi", "UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.Degerler", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithOne("deger")
                        .HasForeignKey("ANAILYAHOME.entityes.Degerler", "UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANAILYAHOME.entityes.ProductDeger", "prodouct")
                        .WithMany("Listofdegerler")
                        .HasForeignKey("prodouctId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("prodouct");

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.FiyatEntity", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithMany("Listoffiyat")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.FotoEntity", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithMany("Listoffoto")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.OturmaOdasi", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithOne("oturma")
                        .HasForeignKey("ANAILYAHOME.entityes.OturmaOdasi", "UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.YatmaOdasi", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithOne("yatma")
                        .HasForeignKey("ANAILYAHOME.entityes.YatmaOdasi", "UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.YemekOdasi", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.urunEntity", "urun")
                        .WithOne("yemek")
                        .HasForeignKey("ANAILYAHOME.entityes.YemekOdasi", "UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.cocukfiyatler", b =>
                {
                    b.HasOne("ANAILYAHOME.entityes.FiyatEntity", "fiyat")
                        .WithOne("cocukfiyat")
                        .HasForeignKey("ANAILYAHOME.entityes.cocukfiyatler", "fiyatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.oturmafiyatler", b =>
                {
                    b.HasOne("ANAILYAHOME.entityes.FiyatEntity", "fiyat")
                        .WithOne("oturmafiyat")
                        .HasForeignKey("ANAILYAHOME.entityes.oturmafiyatler", "fiyatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.yatmafiyatler", b =>
                {
                    b.HasOne("ANAILYAHOME.entityes.FiyatEntity", "fiyat")
                        .WithOne("yatmafiyat")
                        .HasForeignKey("ANAILYAHOME.entityes.yatmafiyatler", "fiyatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fiyat");
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.yemekfiyatler", b =>
                {
                    b.HasOne("ANAILYAHOME.entityes.FiyatEntity", "fiyat")
                        .WithOne("yemekfiyat")
                        .HasForeignKey("ANAILYAHOME.entityes.yemekfiyatler", "fiyatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fiyat");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANAILYAHOME.Models.AplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ANAILYAHOME.Models.AplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ANAILYAHOME.Models.AdmenbanalEntity", b =>
                {
                    b.Navigation("BayiKategorilist");

                    b.Navigation("Listofurun");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.AliciEntity", b =>
                {
                    b.Navigation("Listofalışveriş");
                });

            modelBuilder.Entity("ANAILYAHOME.Models.AplicationUser", b =>
                {
                    b.Navigation("Admenbanal")
                        .IsRequired();

                    b.Navigation("Alici")
                        .IsRequired();
                });

            modelBuilder.Entity("ANAILYAHOME.Models.urunEntity", b =>
                {
                    b.Navigation("ListofBuyut");

                    b.Navigation("Listofalışveriş");

                    b.Navigation("Listoffiyat");

                    b.Navigation("Listoffoto");

                    b.Navigation("cocuk")
                        .IsRequired();

                    b.Navigation("deger")
                        .IsRequired();

                    b.Navigation("oturma")
                        .IsRequired();

                    b.Navigation("yatma")
                        .IsRequired();

                    b.Navigation("yemek")
                        .IsRequired();
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.FiyatEntity", b =>
                {
                    b.Navigation("cocukfiyat")
                        .IsRequired();

                    b.Navigation("oturmafiyat")
                        .IsRequired();

                    b.Navigation("yatmafiyat")
                        .IsRequired();

                    b.Navigation("yemekfiyat")
                        .IsRequired();
                });

            modelBuilder.Entity("ANAILYAHOME.entityes.ProductDeger", b =>
                {
                    b.Navigation("Listofdegerler");
                });
#pragma warning restore 612, 618
        }
    }
}
